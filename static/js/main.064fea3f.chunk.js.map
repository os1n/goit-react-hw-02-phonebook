{"version":3,"sources":["components/ListItem/ListItem.js","components/Lister/Lister.js","components/Input/Input.js","components/ContactForm/ContactForm.js","components/ArrayFilter/ArrayFilter.js","components/ContactsEditor/ContactsEditor.js","components/App.js","index.js"],"names":["ListItem","id","name","number","deleteContact","onClick","e","Contacts","props","outputArray","contacts","filter","item","includes","inputTitle","map","key","Input","inputValue","handleInput","inputName","htmlFor","type","value","onChange","ContactForm","handleChangeInput","parName","target","setState","handleSubmit","preventDefault","state","alert","sendItemBack","this","onSubmit","Component","ArrayFilter","sendFilterBack","ContactsEditor","addContact","newname","newnumber","arr","contact","uuid","some","x","prevState","contactId","setFilter","filterValue","length","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.064fea3f.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nexport default function ListItem({ id, name, number, deleteContact }) {\n  function handlePress(e) {\n    deleteContact(id);\n  }\n\n  return (\n    <li>\n      <span>Name: {name}</span>\n      <br />\n      <span>Number: {number}</span>\n      <br />\n      <button onClick={handlePress}>Delete contact</button>\n    </li>\n  );\n}\n\nListItem.propTypes = {\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  number: propTypes.string.isRequired,\n  deleteContact: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport ListContact from '../ListItem/ListItem';\nimport propTypes from 'prop-types';\n\nexport default function Contacts(props) {\n  const outputArray = props.contacts.filter(item =>\n    item.name.includes(props.filter),\n  );\n\n  return (\n    <div>\n      <h2>{props.inputTitle}</h2>\n      <ul>\n        {outputArray.map(item => (\n          <ListContact\n            key={item.id}\n            id={item.id}\n            name={item.name}\n            number={item.number}\n            deleteContact={props.deleteContact}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContacts.propTypes = {\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  number: propTypes.string,\n  deleteContact: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nexport default function Input({ inputValue, handleInput, inputName }) {\n  //console.log(handleInput);\n  return (\n    <>\n      <label htmlFor=\"text\">{inputName} </label>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInput}\n        name={inputName}\n      />\n    </>\n  );\n}\n\nInput.propTypes = {\n  inputValue: propTypes.string,\n  inputName: propTypes.string,\n  handleInput: propTypes.func,\n};\n","import React, { Component } from 'react';\nimport Input from '../Input/Input';\n\nexport default class ContactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      number: '',\n    };\n  }\n\n  handleChangeInput = e => {\n    const parName = e.target.name;\n    this.setState({ [parName]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.name === '' || this.state.number === '')\n      alert('All fields must be filled.');\n    else this.props.sendItemBack(this.state.name, this.state.number);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div>\n        <h2>Contact Form</h2>\n        <form onSubmit={this.handleSubmit}>\n          <Input\n            handleInput={this.handleChangeInput}\n            inputValue={name}\n            inputName=\"name\"\n          />\n          <br />\n          <br />\n          <Input\n            handleInput={this.handleChangeInput}\n            inputValue={number}\n            inputName=\"number\"\n          />\n          <br />\n          <br />\n          <button type=\"submit\">Add the contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nexport default class ArrayFilter extends Component {\n  state = {\n    name: '',\n  };\n\n  handleChangeInput = e => {\n    this.setState({ name: e.target.value });\n    this.props.sendFilterBack(e.target.value);\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Filter Contacts by name:</h3>\n        <form>\n          <label htmlFor=\"text\">Name </label>\n          <input\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChangeInput}\n            name=\"name\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nArrayFilter.propTypes = {\n  sendFilterBack: propTypes.func,\n};\n","import React, { Component } from 'react';\nimport Contacts from '../Lister/Lister';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactListFilter from '../ArrayFilter/ArrayFilter';\n\n// External dependacies\nimport { v4 as uuid } from 'uuid';\n\nexport default class ContactsEditor extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (newname, newnumber) => {\n    const contact = {\n      id: uuid(),\n      name: newname,\n      number: newnumber,\n    };\n\n    const getContactById = (arr, name) => arr.some(x => x.name === name);\n\n    if (getContactById(this.state.contacts, newname))\n      alert('Such contact exists, be attentive!!!');\n    else\n      this.setState(prevState => {\n        return { contacts: [...prevState.contacts, contact] };\n      });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  setFilter = filterValue => {\n    return this.setState({ filter: filterValue });\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <div>\n        <h1>Contacts Editor</h1>\n        <ContactForm contacts={contacts} sendItemBack={this.addContact} />\n\n        <ContactListFilter sendFilterBack={this.setFilter} />\n\n        {contacts.length > 0 && (\n          <Contacts\n            contacts={contacts}\n            inputTitle={'Contacts list'}\n            filter={this.state.filter}\n            deleteContact={this.deleteContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport ContactsEditor from './ContactsEditor/ContactsEditor';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ContactsEditor />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}