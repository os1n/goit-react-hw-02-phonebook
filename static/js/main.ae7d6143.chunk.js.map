{"version":3,"sources":["components/ListItem/ListItem.js","components/ContactsLister/ContactsLister.js","components/Input/Input.js","components/ContactForm/ContactForm.js","components/ArrayFilter/ArrayFilter.js","components/ContactsEditor/ContactsEditor.js","components/App.js","index.js"],"names":["ListItem","id","name","number","handleSubmit","key","onClick","e","preventDefault","ContactsLister","outputArray","this","props","inputArray","filter","item","includes","inputTitle","map","deleteContact","Component","Input","inputValue","handleInput","inputName","htmlFor","type","value","onChange","ContactForm","handleChangeInput","parName","target","setState","sendItemBack","state","onSubmit","ArrayFilter","sendFilterBack","ContactsEditor","contacts","addContact","newname","newnumber","contact","uuid","prevState","arr","find","x","alert","contactId","setfilter","filterValue","length","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae7d6143.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nexport default function ListItem({ id, name, number, handleSubmit }) {\n  function handlePress(e) {\n    e.preventDefault();\n    handleSubmit(id);\n  }\n\n  return (\n    <li key={id}>\n      <span>Name: {name}</span>\n      <br />\n      <span>Number: {number}</span>\n      <br />\n      <button onClick={handlePress}>Delete contact</button>\n    </li>\n  );\n}\n\nListItem.propTypes = {\n  id: propTypes.string,\n  name: propTypes.string,\n  number: propTypes.string,\n  handleSubmit: propTypes.func,\n};\n","import React, { Component } from 'react';\nimport ListItem from '../ListItem/ListItem';\nimport propTypes from 'prop-types';\n\nexport default class ContactsLister extends Component {\n  render() {\n    const outputArray = this.props.inputArray.filter(item =>\n      item.name.includes(this.props.filter),\n    );\n\n    return (\n      <div>\n        <h2>{this.props.inputTitle}</h2>\n        <ul>\n          {outputArray.map(item => (\n            <ListItem\n              id={item.id}\n              name={item.name}\n              number={item.number}\n              handleSubmit={this.props.deleteContact}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nContactsLister.propTypes = {\n  id: propTypes.string,\n  name: propTypes.string,\n  number: propTypes.string,\n  handleSubmit: propTypes.func,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nexport default function Input({ inputValue, handleInput, inputName }) {\n  //console.log(handleInput);\n  return (\n    <>\n      <label htmlFor=\"text\">{inputName} </label>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInput}\n        name={inputName}\n      />\n    </>\n  );\n}\n\nInput.propTypes = {\n  inputValue: propTypes.string,\n  inputName: propTypes.string,\n  handleInput: propTypes.func,\n};\n","import React, { Component } from 'react';\nimport Input from '../Input/Input';\nimport propTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      number: '',\n    };\n  }\n\n  handleChangeInput = e => {\n    const parName = e.target.name;\n    this.setState({ [parName]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.sendItemBack(this.state.name, this.state.number);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div>\n        <h2>Contact Form</h2>\n        <form onSubmit={this.handleSubmit}>\n          <Input\n            handleInput={this.handleChangeInput}\n            inputValue={name}\n            inputName=\"name\"\n          />\n          <br />\n          <br />\n          <Input\n            handleInput={this.handleChangeInput}\n            inputValue={number}\n            inputName=\"number\"\n          />\n          <br />\n          <br />\n          <button type=\"submit\">Add the contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  handleSubmit: propTypes.func,\n};\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nexport default class ArrayFilter extends Component {\n  state = {\n    name: '',\n  };\n\n  handleChangeInput = e => {\n    this.setState({ name: e.target.value });\n    this.props.sendFilterBack(e.target.value);\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Filter Contacts by name:</h3>\n        <form>\n          <label htmlFor=\"text\">Name </label>\n          <input\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChangeInput}\n            name=\"name\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nArrayFilter.propTypes = {\n  sendFilterBack: propTypes.func,\n};\n","import React, { Component } from 'react';\nimport ContactsLister from '../ContactsLister/ContactsLister';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ArrayFilter from '../ArrayFilter/ArrayFilter';\n\n// External dependacies\nimport { uuid } from 'uuidv4';\n\nexport default class ContactsEditor extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (newname, newnumber) => {\n    const contact = {\n      id: uuid(),\n      name: newname,\n      number: newnumber,\n    };\n\n    const getContactById = (arr, name) => arr.find(x => x.name === name);\n\n    this.setState(prevState => {\n      if (getContactById(prevState.contacts, newname)) {\n        alert('Such contact exists, be attentive!!!');\n        return;\n      }\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  setfilter = filterValue => {\n    return this.setState({ filter: filterValue });\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <div>\n        <h1>Contacts Editor</h1>\n        <ContactForm contacts={contacts} sendItemBack={this.addContact} />\n\n        <ArrayFilter sendFilterBack={this.setfilter} />\n\n        {contacts.length > 0 && (\n          <ContactsLister\n            inputArray={contacts}\n            inputTitle={'Contacts list'}\n            filter={this.state.filter}\n            deleteContact={this.deleteContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ContactsEditor from './ContactsEditor/ContactsEditor'\n\n\nclass App extends Component {\n \n\n  render() {\n    return (\n      <div className=\"App\">\n        <ContactsEditor />\n      </div>\n    );\n  }\n}\n \nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}